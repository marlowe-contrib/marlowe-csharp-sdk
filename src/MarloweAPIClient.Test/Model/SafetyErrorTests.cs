/*
 * Marlowe Runtime REST API
 *
 * REST API for Marlowe Runtime
 *
 * The version of the OpenAPI document: 0.0.5.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using MarloweAPIClient.Model;
using MarloweAPIClient.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace MarloweAPIClient.Test.Model
{
    /// <summary>
    ///  Class for testing SafetyError
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SafetyErrorTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SafetyError
        //private SafetyError instance;

        public SafetyErrorTests()
        {
            // TODO uncomment below to create an instance of SafetyError
            //instance = new SafetyError();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SafetyError
        /// </summary>
        [Fact]
        public void SafetyErrorInstanceTest()
        {
            // TODO uncomment below to test "IsType" SafetyError
            //Assert.IsType<SafetyError>(instance);
        }

        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }

        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }

        /// <summary>
        /// Test the property 'Bytes'
        /// </summary>
        [Fact]
        public void BytesTest()
        {
            // TODO unit test for the property 'Bytes'
        }

        /// <summary>
        /// Test the property 'ChoiceId'
        /// </summary>
        [Fact]
        public void ChoiceIdTest()
        {
            // TODO unit test for the property 'ChoiceId'
        }

        /// <summary>
        /// Test the property 'Cost'
        /// </summary>
        [Fact]
        public void CostTest()
        {
            // TODO unit test for the property 'Cost'
        }

        /// <summary>
        /// Test the property 'CurrencySymbol'
        /// </summary>
        [Fact]
        public void CurrencySymbolTest()
        {
            // TODO unit test for the property 'CurrencySymbol'
        }

        /// <summary>
        /// Test the property 'Detail'
        /// </summary>
        [Fact]
        public void DetailTest()
        {
            // TODO unit test for the property 'Detail'
        }

        /// <summary>
        /// Test the property 'Error'
        /// </summary>
        [Fact]
        public void ErrorTest()
        {
            // TODO unit test for the property 'Error'
        }

        /// <summary>
        /// Test the property 'Fatal'
        /// </summary>
        [Fact]
        public void FatalTest()
        {
            // TODO unit test for the property 'Fatal'
        }

        /// <summary>
        /// Test the property 'Hash'
        /// </summary>
        [Fact]
        public void HashTest()
        {
            // TODO unit test for the property 'Hash'
        }

        /// <summary>
        /// Test the property 'Message'
        /// </summary>
        [Fact]
        public void MessageTest()
        {
            // TODO unit test for the property 'Message'
        }

        /// <summary>
        /// Test the property 'RoleName'
        /// </summary>
        [Fact]
        public void RoleNameTest()
        {
            // TODO unit test for the property 'RoleName'
        }

        /// <summary>
        /// Test the property 'Token'
        /// </summary>
        [Fact]
        public void TokenTest()
        {
            // TODO unit test for the property 'Token'
        }

        /// <summary>
        /// Test the property 'TokenName'
        /// </summary>
        [Fact]
        public void TokenNameTest()
        {
            // TODO unit test for the property 'TokenName'
        }

        /// <summary>
        /// Test the property 'Transaction'
        /// </summary>
        [Fact]
        public void TransactionTest()
        {
            // TODO unit test for the property 'Transaction'
        }

        /// <summary>
        /// Test the property 'ValueId'
        /// </summary>
        [Fact]
        public void ValueIdTest()
        {
            // TODO unit test for the property 'ValueId'
        }

        /// <summary>
        /// Test the property 'Warning'
        /// </summary>
        [Fact]
        public void WarningTest()
        {
            // TODO unit test for the property 'Warning'
        }
    }
}
