/*
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarloweAPIClient.Client.OpenAPIDateConverter;

namespace MarloweAPIClient.Model
{
    /// <summary>
    /// Notify a contract to check a condition and provide the continuation of the contract
    /// </summary>
    [DataContract(Name = "Input_oneOf")]
    public partial class InputOneOf : IEquatable<InputOneOf>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InputOneOf" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected InputOneOf() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="InputOneOf" /> class.
        /// </summary>
        /// <param name="continuationHash">continuationHash (required).</param>
        /// <param name="merkleizedContinuation">merkleizedContinuation (required).</param>
        public InputOneOf(string continuationHash = default(string), Contract merkleizedContinuation = default(Contract))
        {
            // to ensure "continuationHash" is required (not null)
            if (continuationHash == null)
            {
                throw new ArgumentNullException("continuationHash is a required property for InputOneOf and cannot be null");
            }
            this._ContinuationHash = continuationHash;
            // to ensure "merkleizedContinuation" is required (not null)
            if (merkleizedContinuation == null)
            {
                throw new ArgumentNullException("merkleizedContinuation is a required property for InputOneOf and cannot be null");
            }
            this._MerkleizedContinuation = merkleizedContinuation;
        }

        /// <summary>
        /// Gets or Sets ContinuationHash
        /// </summary>
        [DataMember(Name = "continuation_hash", IsRequired = true, EmitDefaultValue = true)]
        public string ContinuationHash
        {
            get{ return _ContinuationHash;}
            set
            {
                _ContinuationHash = value;
                _flagContinuationHash = true;
            }
        }
        private string _ContinuationHash;
        private bool _flagContinuationHash;

        /// <summary>
        /// Returns false as ContinuationHash should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeContinuationHash()
        {
            return _flagContinuationHash;
        }
        /// <summary>
        /// Gets or Sets MerkleizedContinuation
        /// </summary>
        [DataMember(Name = "merkleized_continuation", IsRequired = true, EmitDefaultValue = true)]
        public Contract MerkleizedContinuation
        {
            get{ return _MerkleizedContinuation;}
            set
            {
                _MerkleizedContinuation = value;
                _flagMerkleizedContinuation = true;
            }
        }
        private Contract _MerkleizedContinuation;
        private bool _flagMerkleizedContinuation;

        /// <summary>
        /// Returns false as MerkleizedContinuation should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeMerkleizedContinuation()
        {
            return _flagMerkleizedContinuation;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class InputOneOf {\n");
            sb.Append("  ContinuationHash: ").Append(ContinuationHash).Append("\n");
            sb.Append("  MerkleizedContinuation: ").Append(MerkleizedContinuation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InputOneOf);
        }

        /// <summary>
        /// Returns true if InputOneOf instances are equal
        /// </summary>
        /// <param name="input">Instance of InputOneOf to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InputOneOf input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ContinuationHash == input.ContinuationHash ||
                    (this.ContinuationHash != null &&
                    this.ContinuationHash.Equals(input.ContinuationHash))
                ) && 
                (
                    this.MerkleizedContinuation == input.MerkleizedContinuation ||
                    (this.MerkleizedContinuation != null &&
                    this.MerkleizedContinuation.Equals(input.MerkleizedContinuation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ContinuationHash != null)
                {
                    hashCode = (hashCode * 59) + this.ContinuationHash.GetHashCode();
                }
                if (this.MerkleizedContinuation != null)
                {
                    hashCode = (hashCode * 59) + this.MerkleizedContinuation.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
