/*
 * Marlowe Runtime REST API
 *
 * REST API for Marlowe Runtime
 *
 * The version of the OpenAPI document: 0.0.5.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = MarloweAPIClient.Client.OpenAPIDateConverter;

namespace MarloweAPIClient.Model
{
    /// <summary>
    /// A Plutus address.
    /// </summary>
    [DataContract(Name = "Plutus.Address")]
    public partial class PlutusAddress : IEquatable<PlutusAddress>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlutusAddress" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PlutusAddress() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PlutusAddress" /> class.
        /// </summary>
        /// <param name="addressCredential">addressCredential (required).</param>
        /// <param name="addressStakingCredential">addressStakingCredential.</param>
        public PlutusAddress(PlutusCredential addressCredential = default(PlutusCredential), PlutusStakingCredential addressStakingCredential = default(PlutusStakingCredential))
        {
            // to ensure "addressCredential" is required (not null)
            if (addressCredential == null)
            {
                throw new ArgumentNullException("addressCredential is a required property for PlutusAddress and cannot be null");
            }
            this._AddressCredential = addressCredential;
            this._AddressStakingCredential = addressStakingCredential;
            if (this.AddressStakingCredential != null)
            {
                this._flagAddressStakingCredential = true;
            }
        }

        /// <summary>
        /// Gets or Sets AddressCredential
        /// </summary>
        [DataMember(Name = "addressCredential", IsRequired = true, EmitDefaultValue = true)]
        public PlutusCredential AddressCredential
        {
            get{ return _AddressCredential;}
            set
            {
                _AddressCredential = value;
                _flagAddressCredential = true;
            }
        }
        private PlutusCredential _AddressCredential;
        private bool _flagAddressCredential;

        /// <summary>
        /// Returns false as AddressCredential should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAddressCredential()
        {
            return _flagAddressCredential;
        }
        /// <summary>
        /// Gets or Sets AddressStakingCredential
        /// </summary>
        [DataMember(Name = "addressStakingCredential", EmitDefaultValue = false)]
        public PlutusStakingCredential AddressStakingCredential
        {
            get{ return _AddressStakingCredential;}
            set
            {
                _AddressStakingCredential = value;
                _flagAddressStakingCredential = true;
            }
        }
        private PlutusStakingCredential _AddressStakingCredential;
        private bool _flagAddressStakingCredential;

        /// <summary>
        /// Returns false as AddressStakingCredential should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeAddressStakingCredential()
        {
            return _flagAddressStakingCredential;
        }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PlutusAddress {\n");
            sb.Append("  AddressCredential: ").Append(AddressCredential).Append("\n");
            sb.Append("  AddressStakingCredential: ").Append(AddressStakingCredential).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PlutusAddress);
        }

        /// <summary>
        /// Returns true if PlutusAddress instances are equal
        /// </summary>
        /// <param name="input">Instance of PlutusAddress to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PlutusAddress input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.AddressCredential == input.AddressCredential ||
                    (this.AddressCredential != null &&
                    this.AddressCredential.Equals(input.AddressCredential))
                ) && 
                (
                    this.AddressStakingCredential == input.AddressStakingCredential ||
                    (this.AddressStakingCredential != null &&
                    this.AddressStakingCredential.Equals(input.AddressStakingCredential))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AddressCredential != null)
                {
                    hashCode = (hashCode * 59) + this.AddressCredential.GetHashCode();
                }
                if (this.AddressStakingCredential != null)
                {
                    hashCode = (hashCode * 59) + this.AddressStakingCredential.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
